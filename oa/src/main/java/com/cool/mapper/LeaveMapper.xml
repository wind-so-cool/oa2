<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cool.dao.LeaveMapper" >
  <resultMap id="BaseResultMap" type="com.cool.entity.Leave" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="ps" property="ps" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIGINT" />
    <result column="days" property="days" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, user_name, reason, ps, create_date, state, days
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_leave
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_leave
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cool.entity.Leave" >
    insert into sys_leave (id, user_id, user_name, 
      reason, ps, create_date, 
      state, days)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{reason,jdbcType=VARCHAR}, #{ps,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=BIGINT}, #{days,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cool.entity.Leave" >
    insert into sys_leave
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="ps != null" >
        ps,
      </if>
        create_date,
      <if test="state != null" >
        state,
      </if>
      <if test="days != null" >
        days,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="ps != null" >
        #{ps,jdbcType=VARCHAR},
      </if>
      now(),
      <if test="state != null" >
        #{state,jdbcType=BIGINT},
      </if>
      <if test="days != null" >
        #{days,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cool.entity.Leave" >
    update sys_leave
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="ps != null" >
        ps = #{ps,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIGINT},
      </if>
      <if test="days != null" >
        days = #{days,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cool.entity.Leave" >
    update sys_leave
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      ps = #{ps,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=BIGINT},
      days = #{days,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from sys_leave
    order by create_date desc
  </select>
</mapper>